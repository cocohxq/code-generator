package ${javaPackage};

import ${commonValueStack.getValue(tableCamelNameMax + "Manager.classPath")!""};
import ${commonValueStack.getValue(tableCamelNameMax + "DO.classPath")!""};
import ${commonValueStack.getValue(tableCamelNameMax + "Query.classPath")!""};
import ${commonValueStack.getValue(tableCamelNameMax + "Service.classPath")!""};
import ${commonValueStack.getValue("PagedResult.classPath")!""};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

/**
* ${tableMeta.table.comment!''}
* code generated by tool
*/
@Service("${tableCamelNameMin}Service")
public class ${javaClassName} implements ${tableCamelNameMax}Service {

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private ${tableCamelNameMax}Manager ${tableCamelNameMin}Manager;

    @Override
    public Long insert(${tableCamelNameMax}DO ${tableCamelNameMin}DO) {
        return ${tableCamelNameMin}Manager.insert(${tableCamelNameMin}DO);
    }

    @Override
    public Integer updateById(${tableCamelNameMax}DO ${tableCamelNameMin}DO) {
        return ${tableCamelNameMin}Manager.updateById(${tableCamelNameMin}DO);
    }

    @Override
    public Integer deleteById(Long id) {
        return ${tableCamelNameMin}Manager.deleteById(id);
    }

    @Override
    public PagedResult<${tableCamelNameMax}DO> query(${tableCamelNameMax}Query ${tableCamelNameMin}Query) {
        return ${tableCamelNameMin}Manager.query(${tableCamelNameMin}Query);
    }

    @Override
    public List<${tableCamelNameMax}DO> queryAll(${tableCamelNameMax}Query ${tableCamelNameMin}Query){
        return ${tableCamelNameMin}Manager.queryAll(${tableCamelNameMin}Query);
    }

    @Override
    public ${tableCamelNameMax}DO queryById(Long id) {
        return ${tableCamelNameMin}Manager.queryById(id);
    }

    @Override
    public List<${tableCamelNameMax}DO> queryByIds(List<Long> ids) {
        return ${tableCamelNameMin}Manager.queryByIds(ids);
    }

    @Override
    public Integer batchUpdateById(List<${tableCamelNameMax}DO> list) {
        return ${tableCamelNameMin}Manager.batchUpdateById(list);
    }
}

