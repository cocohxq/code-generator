#code generated by tool
server.port = 8081

#druid jdbc   /druid/index.html
spring.datasource.druid.url=${url}
spring.datasource.druid.username=${userName}
spring.datasource.druid.password=${password}
spring.datasource.druid.driver-class-name=${driverName}
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initialSize=10
spring.datasource.druid.minIdle=20
spring.datasource.druid.maxActive=100
#获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#一个连接在池中最小和最大生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.maxEvictableIdleTimeMillis=900000

#用来检测连接是否有效的sql，要求是一个查询语句
#如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效 默认为true
spring.datasource.druid.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效 默认为false
spring.datasource.druid.testOnReturn=true


#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大。 默认为false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20

#mybatis
mybatis.config-locations=classpath:${outBusiPack}/mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:${outBusiPack}/mybatis/**/*Mapper.xml
#开启驼峰命名
mybatis.configuration.map-underscore-to-camel-case=true
#配置模型路径
<#if outBusiPack ?? && outBusiPack?length gt 1>
mybatis.type-aliases-package=${groupId}.${outBusiPack}.domain
<#else>
mybatis.type-aliases-package=${groupId}.domain
</#if>
